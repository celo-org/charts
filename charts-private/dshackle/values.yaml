# Default values for dshackle.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# -- Chart name override
nameOverride: ""
# -- Chart full name override
fullnameOverride: ""

# -- Number of deployment replicas
replicaCount: 1

image:
  repository: emeraldpay/dshackle
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "0.15.2"

# -- Image pull secrets
imagePullSecrets: []

# dshackle config as YAML file. See https://github.com/emeraldpay/dshackle/blob/release/v0.15/docs/reference-configuration.adoc
config: ""
# |
#   version: v1
#   host: 0.0.0.0
#   tls:
#     enabled: false
#   proxy:
#     host: 0.0.0.0
#     routes:
#       - id: sepolia
#         blockchain: sepolia-testnet
#   health:
#     host: 0.0.0.0
#     blockchains:
#       - blockchain: sepolia-testnet
#         min-available: 1
#   monitoring:
#     enabled: true
#     jvm: false
#     extended: false
#     prometheus:
#       bind: 0.0.0.0
#       enabled: true
#   request-log:
#     enabled: true
#   cluster:
#     upstreams:
#       - id: alchemy-sepolia
#         blockchain: sepolia-testnet
#         validate-peers: false
#         connection:
#           ethereum:
#             rpc:
#               url: "https://eth-sepolia.g.alchemy.com/v2/${ALCHEMY_USER}"
#       - id: public-sepolia
#         blockchain: sepolia-testnet
#         priority: 9
#         validation-interval: 10
#         connection:
#           ethereum:
#             rpc:
#               url: "https://ethereum-sepolia-rpc.publicnode.com"

# -- Env. vars. from secrets as <ENV_VAR_NAME>.secretName and <ENV_VAR_NAME>.secretKey
env: {}
  # ALCHEMY_USER:
  #   secretName: "test"
  #   secretKey: "test"

serviceAccount:
  # -- Specifies whether a service account should be created
  create: true
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use. If not set and create is true, a name is generated using the fullname template
  name: ""

# -- Custom pod annotations
podAnnotations:
  # prometheus.io/path: /metrics
  # prometheus.io/port: "8081"
  # prometheus.io/scrape: "true"

# -- Custom pod labels
podLabels: {}

# -- Custom pod security context
podSecurityContext: {}
  # fsGroup: 2000

# -- Custom container security context
securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

ingress:
  # -- Ingress enabled
  enabled: false
  # -- Ingress class name
  className: nginx
  # -- Custom Ingress annotations
  annotations: {}

  # -- List of hosts to expose safe-config-service. See values.yaml for an example.
  hosts: []
    # - host: config-service.celo-safe.io
    #   paths:
    #     - path: /

  # -- TLS secret for exposing safe-config-service with https. See values.yaml for an example.
  tls: []
    # - secretName: chart-example-tls
    #   hosts:
    #      - config-service.celo-safe.io

# -- Container resources
resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# -- Liveness probe configuration
livenessProbe: {}
#   httpGet:
#     path: /health
#     port: health

# -- Readiness probe configuration
readinessProbe: {}
#   httpGet:
#     path: /health
#     port: health

# -- Kubernetes node selector
nodeSelector: {}

# -- Kubernetes tolerations
tolerations: []

# -- Kubernetes pod affinity
affinity: {}
