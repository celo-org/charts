# Default values for forta-firewall-proxy.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# -- Chart name override
nameOverride: ""
# -- Chart full name override
fullnameOverride: ""

# -- Number of deployment replicas
replicaCount: 1

# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
image:
  # -- Image repository
  repository: us-west1-docker.pkg.dev/devopsre/forta-firewall-op-txproxy/forta-firewall-op-txproxy
  # -- Image pullpolicy
  pullPolicy: IfNotPresent
  # -- Image tag
  # Overrides the image tag whose default is the chart appVersion.
  tag: "v0.0.1"

# -- Image pull secrets
imagePullSecrets: []

# -- Env Vars. for the pod.
env: {}
  # OP_TXPROXY_SENDRAWTX_BACKEND: "http://op-geth-replica-rpc-0:8545"
  # OP_TXPROXY_TRACE_BACKEND: "http://op-geth-forno-snapsync-rpc-0:8545"
  # OP_TXPROXY_FIREWALL_BACKEND: "https://attester-api.forta.network/screen"
  # OP_TXPROXY_FIREWALL_MODE: "forward_all"
  # OP_TXPROXY_CHAIN_ID: "62320"
  # OP_TXPROXY_LOG_LEVEL: "debug"
  # OP_TXPROXY_LOG_FORMAT: "json"

# This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # -- Specifies whether a service account should be created
  create: true
  # -- Annotations to add to the service account
  annotations: {}
  # -- Automatically mount a ServiceAccount's API credentials?
  automount: true
  # -- The name of the service account to use. If not set and create is true, a name is generated using the fullname template
  name: ""

# -- Custom pod annotations
podAnnotations: {}
# -- Custom pod labels
podLabels: {}

# -- Custom pod security context
podSecurityContext: {}
  # fsGroup: 2000

# -- Custom container security context
securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  # -- The RPC Port number
  rpcPort: 8545
  # -- The metrics Port number
  metricsPort: 7300

# This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  # -- Enable ingress resource
  enabled: false
  # -- Ingress class name
  className: "nginx"
  # -- Ingress annotations
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  # -- Ingress hostnames
  hosts: []
  #  - host: chart-example.local
  #    paths:
  #      - path: /
  #        pathType: ImplementationSpecific
  # -- Ingress TLS configuration
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

# -- Container resources
resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# -- Liveness probe configuration
livenessProbe:
  httpGet:
    path: /healthz
    port: rpc

# -- Readiness probe configuration
readinessProbe:
  httpGet:
    path: /healthz
    port: rpc

# -- Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# -- Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

# -- Kubernetes node selector
nodeSelector: {}

# -- Kubernetes tolerations
tolerations: []

# -- Kubernetes pod affinity
affinity: {}
