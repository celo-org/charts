# Default values for op-ufm.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# -- Chart name override
nameOverride: ""
# -- Chart full name override
fullnameOverride: ""

# -- Number of deployment replicas
replicaCount: 1

image:
  # -- Image repository
  repository: "us-west1-docker.pkg.dev/devopsre/dev-images/op-ufm"
  # -- Image pullpolicy
  pullPolicy: IfNotPresent
  # -- Image tag
  # Overrides the image tag whose default is the chart appVersion.
  tag: "test"

# -- Image pull secrets
imagePullSecrets: []

serviceAccount:
  # -- Specifies whether a service account should be created
  create: true
  # -- Automatically mount a ServiceAccount's API credentials?
  automount: true
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use. If not set and create is true, a name is generated using the fullname template
  name: ""

# -- Config as string. Minimal example at https://github.com/ethereum-optimism/optimism/blob/develop/op-ufm/example.config.toml
config: ""
# |
#  # Log level.
#  # Possible values: trace | debug | info | warn | error | crit
#  # Default: debug
#  log_level = "trace"
#
#  [signer_service]
#  # URL to the signer service
#  url = "http://localhost:1234"
#  tls_ca_cert = "tls/ca.crt"
#  tls_cert = "tls/tls.crt"
#  tls_key = "tls/tls.key"
#
#  [healthz]
#  # Whether or not to enable healthz endpoint
#  enabled = true
#  # Host for the healthz endpoint to listen on
#  host = "0.0.0.0"
#  # Port for the above.
#  port = "8080"
#
#  [metrics]
#  # Whether or not to enable Prometheus metrics
#  enabled = true
#  # Host for the Prometheus metrics endpoint to listen on.
#  host = "0.0.0.0"
#  # Port for the above.
#  port = "9761"
#
#  [wallets.default]
#  # OP Stack Chain ID
#  # see https://community.optimism.io/docs/useful-tools/networks/
#  chain_id = 42069
#  # Signer method to use
#  # Possible values: signer | static
#  signer_method = "static"
#  # Address used to send transactions
#  address = "0x0000000000000000000000000000000000000000"
#  # For static signer method, the private key to use
#  private_key = "0000000000000000000000000000000000000000000000000000000000000000"
#  # Transaction value in wei
#  tx_value = 100000000000000
#
#
#  [providers.p1]
#  disabled = "true"
#  # URL to the RPC provider
#  url = "http://op-geth:8545"
#  # Read only providers are only used to check for transactions
#  read_only = false
#  # Interval to poll the provider for expected transactions
#  read_interval = "10s"
#  # Interval to submit new transactions to the provider
#  send_interval = "30s"
#  # Interval between send transaction when we get "already known" txpool err
#  send_transaction_retry_interval = "100ms"
#  # Max time to retry
#  send_transaction_retry_timeout = "5s"
#  # Interval between each send transaction to the same network
#  send_transaction_cool_down = "30s"
#  # Interval between receipt retrieval
#  receipt_retrieval_interval = "500ms"
#  # Max time to check for receipt
#  receipt_retrieval_timeout = "2m"
#  wallet = "default"

# -- Env Vars. mounted from a secret
secretEnv: {}
  # WALLET_PRIVATE_KEY:
  #   secretName: "alvaro-op-stack-secrets"
  #   secretKey: "gsAdminPrivateKey"

# -- Custom pod annotations
podAnnotations: {}
  # prometheus.io/path: /metrics
  # prometheus.io/port: "9761"
  # prometheus.io/scrape: "true"

# -- Custom pod labels
podLabels: {}

# -- Custom pod security context
podSecurityContext: {}
  # fsGroup: 2000

# -- Custom container security context
securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# -- Container resources
resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# -- Liveness probe configuration
livenessProbe:
  httpGet:
    path: /healthz
    port: health

# -- Readiness probe configuration
readinessProbe:
  httpGet:
    path: /healthz
    port: health

# -- Kubernetes node selector
nodeSelector: {}

# -- Kubernetes tolerations
tolerations: []

# -- Kubernetes pod affinity
affinity: {}
