# Default values for op-proxyd.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# -- Chart name override
nameOverride: ""
# -- Chart full name override
fullnameOverride: ""

# -- Number of deployment replicas
replicaCount: 1

image:
  # -- Image repository
  repository: us-docker.pkg.dev/oplabs-tools-artifacts/images/proxyd
  # -- Image pullpolicy
  pullPolicy: IfNotPresent
  # -- Image tag
  # Overrides the image tag whose default is the chart appVersion.
  tag: "v4.6.0"

# -- Image pull secrets
imagePullSecrets: []

# -- Config as string. Minimal example at https://github.com/ethereum-optimism/optimism/blob/develop/proxyd/example.config.toml
config: ""
# |
#  ws_method_whitelist = [
#    "eth_subscribe",
#    "eth_call",
#    "eth_chainId",
#    "eth_getBlockByNumber",
#    "eth_sendRawTransaction"
#  ]
#
#  ws_backend_group = "sequencer"
#
#  [server]
#  rpc_host = "0.0.0.0"
#  rpc_port = {{ .Values.service.rpcPort | default 8080 }}
#  ws_host = "0.0.0.0"
#  ws_port = {{ .Values.service.wsPort | default 8085 }}
#  max_body_size_bytes = 10485760
#  max_concurrent_rpcs = 1000
#  log_level = "debug"
#
#  [metrics]
#  enabled = {{ .Values.metrics.enabled }}
#  host = "0.0.0.0"
#  port = {{ .Values.metrics.port | default 9761 }}
#
#  [backend]
#  response_timeout_seconds = 5
#  max_response_size_bytes = 5242880
#  max_retries = 3
#  out_of_service_seconds = 600
#  max_latency_threshold = "30s"
#  max_degraded_latency_threshold = "10s"
#  max_error_rate_threshold = 0.3
#
#  [backends]
#  [backends.sequencer]
#  rpc_url = "http://op-geth:8545"
#  max_rps = 3
#  [backends.replica]
#  rpc_url = "http://op-geth-replica:8545"
#  max_rps = 3
#
#  [backend_groups]
#  [backend_groups.sequencer]
#  backends = ["sequencer"]
#  [backend_groups.replicas]
#  backends = ["replica"]
#
#  [rpc_method_mappings]
#  eth_sendRawTransaction = "sequencer"
#  eth_getBlockByNumber = "replicas"

serviceAccount:
  # -- Specifies whether a service account should be created
  create: true
  # -- Automatically mount a ServiceAccount's API credentials?
  automount: true
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use. If not set and create is true, a name is generated using the fullname template
  name: ""

# -- Custom pod annotations
podAnnotations: {}
  # prometheus.io/path: /metrics
  # prometheus.io/port: "9761"
  # prometheus.io/scrape: "true"

# -- Custom pod labels
podLabels: {}

# -- Custom pod security context
podSecurityContext: {}
  # fsGroup: 2000

# -- Custom container security context
securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  # -- K8S service type
  type: ClusterIP
  # -- RPC port
  rpcPort: 8080
  # -- WS port
  wsPort: 8085

metrics:
  # -- Enable metrics
  enabled: true
  # -- Metrics port
  port: 9761

ingress:
  # -- Enable ingress
  enabled: false
  className: "nginx"
  annotations: {}
    # cert-manager.io/cluster-issuer: letsencrypt-prod
    # kubernetes.io/tls-acme: "true"
    # nginx.ingress.kubernetes.io/enable-cors: "true"
    # nginx.ingress.kubernetes.io/limit-connections: "40"
    # nginx.ingress.kubernetes.io/limit-rpm: "1200"
    # nginx.ingress.kubernetes.io/limit-rps: "200"
    # nginx.ingress.kubernetes.io/proxy-read-timeout: "1200"
    # nginx.ingress.kubernetes.io/proxy-send-timeout: "1200"
    # nginx.ingress.kubernetes.io/rewrite-target: /
  hosts: []
    # - host: alvaro-op-testnet.cel2.celo-networks-dev.org
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

# -- Container resources
resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# -- Liveness probe configuration
livenessProbe:
  httpGet:
    path: /healthz
    port: rpc

# -- Readiness probe configuration
readinessProbe:
  httpGet:
    path: /healthz
    port: rpc

# -- HPA configuration
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# -- Kubernetes node selector
nodeSelector: {}

# -- Kubernetes tolerations
tolerations: []

# -- Kubernetes pod affinity
affinity: {}
