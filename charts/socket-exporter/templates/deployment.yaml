apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "socket-exporter.fullname" . }}
  labels:
    {{- include "socket-exporter.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "socket-exporter.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "socket-exporter.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "socket-exporter.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 9101
              protocol: TCP
          env:
            - name: PERIOD
              value: "{{ .Values.env.period }}"
            - name: LOG_LEVEL
              value: {{ .Values.env.logLevel }}
            {{- if .Values.env.apiTokenExistingSecret }}
            - name: API_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.env.apiTokenExistingSecret }}
                  key: {{ include "socket-exporter.secret" . }}
            {{- else if and (.Values.env.apiToken) (not .Values.env.apiTokenExistingSecret) }}
            - name: API_TOKEN
              value: {{ .Values.env.apiKey }}
            {{- end }}
          {{- with .Values.livenessProbe }}
          livenessProbe:
            {{- toYaml . | nindent 12 }}
            {{- if not .httpGet }}
            httpGet:
              path: /metrics
              port: http
            {{- end }}
          {{- end }}
          {{- with .Values.readinessProbe }}
          readinessProbe:
            {{- toYaml . | nindent 12 }}
            {{- if not .httpGet }}
            httpGet:
              path: /metrics
              port: http
            {{- end }}
          {{- end }}
          {{- with .Values.startupProbe }}
          startupProbe:
            {{- toYaml . | nindent 12 }}
            {{- if not .httpGet }}
            httpGet:
              path: /metrics
              port: http
            {{- end }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
