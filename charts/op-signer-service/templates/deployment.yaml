apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "op-signer-service.fullname" . }}
  labels:
    {{- include "op-signer-service.labels" . | nindent 4 }}
  {{- with .Values.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "op-signer-service.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "op-signer-service.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "op-signer-service.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ include "op-signer-service.port" . }}
              protocol: TCP
            {{- if .Values.tls.enabled}}
            - name: https
              containerPort: {{ include "op-signer-service.tls-port" . }}
              protocol: TCP
            {{- end}}
          {{- if or (.Values.env) (.Values.tls.enabled) }}
          env:
          {{- with .Values.env }}
            {{- range $key, $value := . }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
          {{- end }}
          {{- if .Values.tls.enabled}}
            - name: TLS_ENABLED
              value: "true"
          {{- if .Values.tls.certManager.enabled }} 
            - name: SECRET_CERT_KEY
              value: tls.crt
            - name: SECRET_KEY_KEY
              value: tls.key
            - name: SECRET_CA_KEY
              value: ca.crt
          {{- else }}
            - name: SECRET_CERT_KEY
              value: {{ .Values.tls.externalSecret.tlsSecretCertKey | quote }}
            - name: SECRET_KEY_KEY
              value: {{ .Values.tls.externalSecret.tlsSecretKeyKey | quote }}
            - name: SECRET_CA_KEY
              value: {{ .Values.tls.externalSecret.tlsSecretCaKey | quote }}
          {{- end }}
          {{- end }}
          {{- end }}
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- if .Values.tls.enabled }}
          volumeMounts:
            - mountPath: "/app/certs"
              name: pki
              readOnly: true
      volumes:
        - name: pki
          secret:
            secretName: {{ ternary (include "op-signer-service.fullname" .) .Values.tls.externalSecret.tlsSecretName .Values.tls.certManager.enabled }}
          {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
