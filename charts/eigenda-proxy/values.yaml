---
# Default values for eigenda-proxy.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: us-west1-docker.pkg.dev/devopsre/celo-blockchain-public/eigenda-proxy
  pullPolicy: Always
  tag: v1.4.1

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 4242

services:
  api:
    enabled: true
    type: ClusterIP
    port: 4242
    annotations: {}
  metrics:
    enabled: true
    type: ClusterIP
    port: 7300
    annotations: {}
    publishNotReadyAddresses: true

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

livenessProbe: {}
  # httpGet:
  #   path: /
  #   port: http
readinessProbe: {}
  # httpGet:
  #   path: /
  #   port: http

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity:
  podAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        podAffinityTerm:
          labelSelector:
            matchExpressions:
              - key: app.kubernetes.io/name
                operator: In
                values:
                  - op-batcher
          topologyKey: "kubernetes.io/hostname"

extraArgs: []

persistence:
  enabled: true
  # storageClass: ""
  size: 12Gi
  annotations: {}
    # resize.topolvm.io/increase: 10%
    # resize.topolvm.io/inodes-threshold: 5%
    # resize.topolvm.io/storage_limit: 50Gi
    # resize.topolvm.io/threshold: 10%

config:
  disperser:
    rpc: disperser-holesky.eigenda.xyz:443
  eth:
    confirmationDepth: 1
    rpc: https://ethereum-holesky-rpc.publicnode.com
    serviceManagerAddr: 0xD4A7E1Bd8015057293f0D0A557088c286942e84b
  routing:
    cacheTargets: ""
  privateKey:
    value: ""
    # secretName: test
    # secretKey: test
  s3:
    backup: null
    bucket: ""
    endpoint: ""
    disableTls: null
    credentialType: ""
    accessKeyId: ""
    accessKeySecret: ""
    path: ""

log:
  level: info
  format: json
