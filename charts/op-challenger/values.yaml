# Default values for op-challenger.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# -- Chart name override
nameOverride: ""
# -- Chart full name override
fullnameOverride: ""

# -- Number of deployment replicas
replicaCount: 1

image:
  # -- Image repository
  repository: us-west1-docker.pkg.dev/blockchaintestsglobaltestnet/dev-images/op-challenger
  # -- Image pullpolicy
  pullPolicy: IfNotPresent
  # -- Image tag
  # Overrides the image tag whose default is the chart appVersion.
  tag: "main"

# -- Image pull secrets
imagePullSecrets: []

extraArgs: []

config:
  disputeGameFactoryProxy: ""
  l1Beacon: https://celo-l1-beacon.celo-networks-dev.org
  l2EthRPC: http://op-geth-sequencer-shared-rpc:8545
  rollupRPC: http://op-node-sequencer-shared-rpc:9545
  traceType: "permissioned,cannon"
  selectiveClaimResolution: false
  gameWindow: 672h0m0s
  monitorInterval: 30s
  maxConcurrency: 5
  honestActors: []
    # - "0x0000000000000000000000000000000000000000"
    # - "0x0000000000000000000000000000000000000001"
  ignoredGames: []
    # - "0x000000000000000000000000000000000000000a"
    # - "0x000000000000000000000000000000000000000b"
  log:
    format: json
    color: false
    level: INFO
  metrics:
    enabled: true
    addr: 0.0.0.0
    port: 7300
  signer:
    enabled: false                       # Enable the signer
    address: "0x000000000000"
    endpoint: "https://test.example.com"
    tls:
      # -- Enable TLS
      enabled: false
      certManager:
        # -- Enable creating certificates through certmanager. This takes precedence over externalSecret.
        enabled: false
        # -- Issuer name
        issuerName: "test-issuer"
        # -- Issuer kind
        issuerKind: "Issuer"
        # -- Issuer group
        issuerGroup: ""
      externalSecret:
        # -- Secret name for the secret containing an already created TLS certificate
        tlsSecretName: "test-secret"
        # -- Secret key for the TLS certificate
        tlsSecretCertKey: "certificate.pem"
        # -- Secret key for the TLS key
        tlsSecretKeyKey: "key.pem"
        # -- Secret key for the TLS CA
        tlsSecretCaKey: "ca.pem"


secrets:
  privateKey:
    value: ""
    secretName: ""
    secretKey: ""
  l1Url:
    value: ""
    secretName: ""
    secretKey: ""

serviceAccount:
  # -- Specifies whether a service account should be created
  create: true
  # -- Automatically mount a ServiceAccount's API credentials?
  automount: true
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use. If not set and create is true, a name is generated using the fullname template
  name: ""

services:
  metrics:
    enabled: true
    type: ClusterIP
    port: 7300
    annotations: {}
    publishNotReadyAddresses: true

# -- Annotations to add to the statefulset
annotations: {}

# -- Custom pod annotations
podAnnotations: {}
  # prometheus.io/path: /metrics
  # prometheus.io/port: "7300"
  # prometheus.io/scrape: "true"

# -- Custom pod labels
podLabels: {}

# -- Custom pod security context
podSecurityContext: {}
  # fsGroup: 2000

# -- Custom container security context
securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# -- Container resources
resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# -- Liveness probe configuration
livenessProbe: {}
  # httpGet:
  #   path: /healthz
  #   port: healthz

# -- Readiness probe configuration
readinessProbe: {}
  # httpGet:
  #   path: /healthz
  #   port: healthz

# -- Kubernetes node selector
nodeSelector: {}

# -- Kubernetes tolerations
tolerations: []

# -- Kubernetes pod affinity
affinity: {}

initContainers: {}
init:
  contracts:
    enabled: true
    image:
      repository: alpine
      tag: 3.19
      pullPolicy: IfNotPresent
    urls:
      deployment-l1.json: ""
      rollup.json: ""
      genesis.json: ""
      prestate.json: ""

persistence:
  size: 1Gi
  storageClass: ""
  annotations: {}
    # resize.topolvm.io/increase: 10%
    # resize.topolvm.io/storage_limit: 500Gi
    # resize.topolvm.io/threshold: 10%
    # resize.topolvm.io/inodes-threshold: 5%
