apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "app.fullname" . }}
  labels:
    {{- include "app.labels" . | nindent 4 }}
spec:
  serviceName: {{ include "app.fullname" . }}
  replicas: 1
  selector:
    matchLabels:
      {{- include "app.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
      {{- if and .Values.podAnnotations (not (empty .Values.podAnnotations)) }}
        {{- toYaml .Values.podAnnotations | nindent 8 }}
      {{- end }}
      labels:
        {{- include "app.labels" . | nindent 8 }}
        {{- if and .Values.podLabels (not (empty .Values.podLabels)) }}
          {{- toYaml .Values.podLabels | nindent 8 }}
        {{- end }}
    spec:
      {{- if and .Values.imagePullSecrets (not (empty .Values.imagePullSecrets)) }}
      imagePullSecrets:
        {{- toYaml .Values.imagePullSecrets | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "app.serviceAccountName" . }}
      {{- if not ( empty .Values.podSecurityContext ) }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- end}}
      containers:
        - name: {{ .Chart.Name }}
          command: 
            - "/bin/sh"
            - "-c"
          args: 
            - >
              exec parallel-cost-estimator
              {{- if and .Values.config.app.from_block (not (empty .Values.config.app.from_block)) }}
              --from {{ .Values.config.app.from_block }}
              {{- end }}
              {{- if and .Values.config.app.to_block (not (empty .Values.config.app.to_block)) }}
              --to {{ .Values.config.app.to_block }}
              {{- end }}
              --range {{ .Values.config.app.range }}
              --batch-size {{ .Values.config.app.batch_size }}
              --concurrency {{ .Values.config.app.concurrency }}
          env:
            - name: EIGENDA_PROXY_ADDRESS
              value: {{ .Values.config.app.eigenda_proxy_url }}
            - name: L2_RPC
              value: {{ .Values.config.app.l2_geth_url }}
            - name: L2_NODE_RPC
              value: {{ .Values.config.app.l2_node_url }}
            - name: L1_RPC
              value: {{ .Values.config.app.l1_url }}
            - name: L1_BEACON_RPC
              value: {{ .Values.config.app.l1_beacon_url }}
            - name: SP1_PROVER
              value: {{ .Values.config.app.sp1_prover }}
            - name: OP_SUCCINCT_MOCK
              value: {{ .Values.config.app.op_succinct_mock | quote }}
            {{- if and .Values.config.app.rust_log (not (empty .Values.config.app.rust_log)) }}
            - name: RUST_LOG
              value: {{ .Values.config.app.rust_log }}
            {{- end }}
            {{- range $key, $value := .Values.config.app.extraEnv }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
          {{- if .Values.persistence.enabled }}
          volumeMounts:
            - name: data
              mountPath: /state
          {{- end }}
          {{- if not ( empty .Values.securityContext ) }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          {{- end }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if and .Values.livenessProbe (not (empty .Values.livenessProbe)) }}
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          {{- end }}
          {{- if and .Values.readinessProbe (not (empty .Values.readinessProbe)) }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          {{- end }}
          {{- if and .Values.resources (not (empty .Values.resources)) }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- end }}
      enableServiceLinks: {{ .Values.enableServiceLinks }}
      {{- if and .Values.nodeSelector (not (empty .Values.nodeSelector)) }}
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 8 }}
      {{- end }}
      {{- if and .Values.affinity (not (empty .Values.affinity)) }}
      affinity:
        {{- toYaml .Values.affinity | nindent 8 }}
      {{- end }}
      {{- if and .Values.tolerations (not (empty .Values.tolerations)) }}
      tolerations:
        {{- toYaml .Values.tolerations | nindent 8 }}
      {{- end }}
  {{- if .Values.persistence.enabled }}
  volumeClaimTemplates:
    - metadata:
        name: data
        labels:
          {{- include "app.selectorLabels" . | nindent 10 }}
        {{- with .Values.persistence.pvc.annotations }}
        annotations:
          {{- toYaml . | nindent 10 }}
        {{- end }}
      spec:
        accessModes:
        - {{ .Values.persistence.pvc.accessMode }}
        {{- if .Values.persistence.pvc.storageClass }}
        {{- if eq .Values.persistence.pvc.storageClass "-" }}
        storageClassName: ""
        {{- else }}
        storageClassName: {{ .Values.persistence.pvc.storageClass | quote }}
        {{- end }}
        {{- end }}
        resources:
          requests:
            storage: {{ .Values.persistence.pvc.size | quote }}
  {{- end }}
