# Default values for succinct-cost-estimator.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# -- Chart name override
nameOverride: ""
# -- Chart full name override
fullnameOverride: ""

image:
  # -- Image repository
  repository: us-west1-docker.pkg.dev/devopsre/dev-images/celo-kona
  # -- Image pullpolicy
  pullPolicy: IfNotPresent
  # -- Image tag
  # Overrides the image tag whose default is the chart appVersion.
  tag: "edge"

# -- Image pull secrets
imagePullSecrets: []

extraArgs: []

config:
  app:
    # -- required - at what block to start the estimation. Should be in the last 2 weeks.
    from_block: "1"
    # -- required - at what block to end the estimation.
    to_block: ""
    # -- required - number of blocks sent to every process to create N cost estimation jobs (1000, with 100 batch_size, will use that process to run 10 times the cost estimation, this saves a lot of context re-creation) to run in parallel (the range is split into N jobs, each job will process batch_size blocks)
    range: "18000"
    # -- required - number of blocks to process in each cost estimation job
    batch_size: "1800"
    # -- how many concurrent cost estimation processes should run at the same time for historic blocks
    concurrency: "20" 
    # -- required - url of the eigenda proxy
    eigenda_proxy_url: "http://eigenda-proxy-succinct-api:4242"
    # -- required - url of the l2 geth
    l2_geth_url: "http://op-geth-sequencer-shared-rpc.celo-sepolia-cel2:8545"
    # -- required - url of the l2 node
    l2_node_url: "http://op-node-sequencer-shared-rpc.celo-sepolia-cel2:9545"
    # -- required - url of the l1
    l1_url: "http://celo-sepolia-proxyd-l1-op-proxyd.celo-sepolia-cel2:8545"
    # -- required - url of the l1 beacon
    l1_beacon_url: "https://ethereum-sepolia-beacon-api.publicnode.com"
    # -- required - prover to use
    sp1_prover: "mock"
    # -- required - whether to use the mock op-succinct
    op_succinct_mock: true
    # -- extra environment variables passed to the app's container
    extra-env: {}

persistence:
  enabled: true
  pvc:
    size: 1Gi
    accessMode: ReadWriteOnce
    storageClass: ""           # set to "-" if you want to manually create persistent volume
    annotations: {}

serviceAccount:
  # -- Specifies whether a service account should be created
  create: true
  # -- Automatically mount a ServiceAccount's API credentials?
  automount: true
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use. If not set and create is true, a name is generated using the fullname template
  name: ""

services:
  headless:
    annotations: {}
    publishNotReadyAddresses: true

# -- Custom pod annotations
podAnnotations: {}
  # prometheus.io/path: /metrics
  # prometheus.io/port: "7300"
  # prometheus.io/scrape: "true"

# -- Custom pod labels
podLabels: {}

# -- Custom pod security context
podSecurityContext: {}
  # fsGroup: 2000

# -- Custom container security context
securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# -- Container resources
resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# -- Liveness probe configuration
livenessProbe: {}
  # httpGet:
  #   path: /healthz
  #   port: healthz

# -- Readiness probe configuration
readinessProbe: {}
  # httpGet:
  #   path: /healthz
  #   port: healthz

# -- Kubernetes node selector
nodeSelector: {}

# -- Kubernetes tolerations
tolerations: []

# -- Kubernetes enableServiceLinks
enableServiceLinks: false

# -- Kubernetes pod affinity
affinity: {}
