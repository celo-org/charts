# Default values for op-tx-overload.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# -- Chart name override
nameOverride: ""
# -- Chart full name override
fullnameOverride: ""

# -- Number of deployment replicas
replicaCount: 1

# -- Command for the deployment. "./tx-overload" if empty.
command: []
  # - |
  #   echo "Done testing"
  #   tail -f /dev/null

# -- Args for the deployment.
args: []
  # - --eth-rpc
  # - http://op-geth:8545
  # - --num-distributors
  # - "1"
  # - --data-rate
  # - "1000"

# -- Env Vars. mounted from a secret
secretEnv: {}
  # TX_OVERLOAD_PRIVATE_KEY:
  #   secretName: "test"
  #   secretKey: "test"

metrics:
  # -- Enable metrics
  enabled: true

image:
  # -- Image repository
  repository: us-west1-docker.pkg.dev/devopsre/dev-images/tx-overload
  # -- Image pullpolicy
  pullPolicy: IfNotPresent
  # -- Image tag
  # Overrides the image tag whose default is the chart appVersion.
  tag: "test"

# -- Image pull secrets
imagePullSecrets: []

serviceAccount:
  # -- Specifies whether a service account should be created
  create: true
  # -- Automatically mount a ServiceAccount's API credentials?
  automount: true
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use. If not set and create is true, a name is generated using the fullname template
  name: ""

# -- Custom pod annotations
podAnnotations: {}
  # prometheus.io/path: /metrics
  # prometheus.io/port: "7300"
  # prometheus.io/scrape: "true"

# -- Custom pod labels
podLabels: {}

# -- Custom pod security context
podSecurityContext: {}
  # fsGroup: 2000

# -- Custom container security context
securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# -- Container resources
resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# -- Kubernetes node selector
nodeSelector: {}

# -- Kubernetes tolerations
tolerations: []

# -- Kubernetes pod affinity
affinity: {}
